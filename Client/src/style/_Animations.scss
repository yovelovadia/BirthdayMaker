// moving colors animation
@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

// particles

//ballons particles more work need to be donenenenene

// .balloon {
//   visibility: hidden;
//   &::after,
//   &:before {
//     position: absolute;
//     content: "";
//     left: 55%;
//     width: 80%;
//     height: 100%;
//     visibility: visible;
//     background-color: inherit;
//     border-radius: 80%;
//   }
//   &:after {
//     content: "444";
//     position: absolute;
//     color: black;
//     bottom: -30px;
//     width: 30px;
//     height: 30px;
//     background-color: black;
//     left: 50%;
//   }
// }

//hearts particles
.heart {
  visibility: hidden;
  &:before,
  &:after {
    position: absolute;
    content: "";
    left: 55%;
    top: 0;
    width: 55%;
    height: 100%;
    visibility: visible;
    background-color: inherit;
    border-radius: 50px 50px 0 0;
    transform: rotate(-45deg);
    transform-origin: 0 100%;
  }

  &:after {
    left: 0;
    transform: rotate(45deg);
    transform-origin: 100% 100%;
  }
}

//snow particle
.snow {
  border-radius: 50%;
}

.squere {
  border-radius: 5%;
}

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

.particles {
  $total: 150;
  position: fixed;
  top: -20vh;
  left: -7vw;
  z-index: -1;

  @for $i from 1 through $total {
    $random-x: random(1000000) * 0.0001vw;
    $random-offset: random_range(-100000, 100000) * 0.0001vw;
    $random-x-end: $random-x + $random-offset;
    $random-x-end-yoyo: $random-x + ($random-offset / 2);
    $random-yoyo-time: random_range(30000, 80000) / 100000;
    $random-yoyo-y: $random-yoyo-time * 120vh;
    $random-scale: random(10000) * 0.0001;
    $fall-duration: random_range(10, 40) * 1s;
    $fall-delay: random(30) * -1s;

    &:nth-child(#{$i}) {
      opacity: random(10000) * 0.0001;
      transform: translate($random-x, -10px) scale($random-scale);
      animation: fall-#{$i} $fall-duration $fall-delay linear infinite;
    }

    @keyframes fall-#{$i} {
      #{percentage($random-yoyo-time)} {
        transform: translate($random-x-end, $random-yoyo-y) scale($random-scale);
      }

      to {
        transform: translate($random-x-end-yoyo, 120vh) scale($random-scale);
      }
    }
  }
}

//waves animation
.wave {
  position: fixed;
  left: 0;
  bottom: 0;
  width: 200%;
  height: 25%;
  z-index: 1;
  background-repeat: repeat no-repeat;
  background-position: 0 bottom;
  transform-origin: center bottom;
}
.waveTop {
  background-size: 50% 100px;
  background-image: url("../Assets/wave-top.png");
}
.waveAnimation .waveTop {
  animation: move-wave 3s;
  -webkit-animation: move-wave 3s;
  -webkit-animation-delay: 1s;
  animation-delay: 1s;
}
.waveMiddle {
  background-size: 50% 120px;
  background-image: url("../Assets/wave-mid.png");
}
.waveAnimation .waveMiddle {
  animation: move_wave 10s linear infinite;
}
.waveBottom {
  background-size: 50% 100px;
  background-image: url("../Assets/wave-bot.png");
}
.waveAnimation .waveBottom {
  animation: move_wave 15s linear infinite;
}

@keyframes move_wave {
  0% {
    transform: translateX(0) translateZ(0) scaleY(1);
  }
  50% {
    transform: translateX(-25%) translateZ(0) scaleY(0.55);
  }
  100% {
    transform: translateX(-50%) translateZ(0) scaleY(1);
  }
}
